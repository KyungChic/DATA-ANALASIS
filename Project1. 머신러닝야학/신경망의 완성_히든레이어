{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"name":"신경망의 완성:히든레이어","provenance":[],"collapsed_sections":[],"authorship_tag":"ABX9TyNrIjfgeZ49qbukV19IFTaP"},"kernelspec":{"name":"python3","display_name":"Python 3"}},"cells":[{"cell_type":"code","metadata":{"id":"XuqHsjls-osm","executionInfo":{"status":"ok","timestamp":1611988161840,"user_tz":-540,"elapsed":2713,"user":{"displayName":"KS Eom","photoUrl":"","userId":"06161176909716943321"}}},"source":["import pandas as pd\r\n","import tensorflow as tf"],"execution_count":1,"outputs":[]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"vnGhkB99-z4M","executionInfo":{"status":"ok","timestamp":1611988203698,"user_tz":-540,"elapsed":786,"user":{"displayName":"KS Eom","photoUrl":"","userId":"06161176909716943321"}},"outputId":"120e6720-c091-4a87-b26b-d267df614100"},"source":["path = 'https://raw.githubusercontent.com/blackdew/tensorflow1/master/csv/boston.csv'\r\n","boston = pd.read_csv(path)\r\n","print(boston.head())"],"execution_count":2,"outputs":[{"output_type":"stream","text":["      crim    zn  indus  chas    nox  ...  tax  ptratio       b  lstat  medv\n","0  0.00632  18.0   2.31     0  0.538  ...  296     15.3  396.90   4.98  24.0\n","1  0.02731   0.0   7.07     0  0.469  ...  242     17.8  396.90   9.14  21.6\n","2  0.02729   0.0   7.07     0  0.469  ...  242     17.8  392.83   4.03  34.7\n","3  0.03237   0.0   2.18     0  0.458  ...  222     18.7  394.63   2.94  33.4\n","4  0.06905   0.0   2.18     0  0.458  ...  222     18.7  396.90   5.33  36.2\n","\n","[5 rows x 14 columns]\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"s__f3wW9-_Vt","executionInfo":{"status":"ok","timestamp":1611988249771,"user_tz":-540,"elapsed":683,"user":{"displayName":"KS Eom","photoUrl":"","userId":"06161176909716943321"}},"outputId":"0d6bf31d-fd0c-421e-831a-f772fad4cc51"},"source":["print(boston.columns)"],"execution_count":3,"outputs":[{"output_type":"stream","text":["Index(['crim', 'zn', 'indus', 'chas', 'nox', 'rm', 'age', 'dis', 'rad', 'tax',\n","       'ptratio', 'b', 'lstat', 'medv'],\n","      dtype='object')\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"yUfTuxXG_KnB","executionInfo":{"status":"ok","timestamp":1611988338506,"user_tz":-540,"elapsed":792,"user":{"displayName":"KS Eom","photoUrl":"","userId":"06161176909716943321"}},"outputId":"615a96b6-6551-4ac1-eba8-c87cf0b069b1"},"source":["indep = boston[['crim', 'zn', 'indus', 'chas', 'nox', 'rm', 'age', 'dis', 'rad', 'tax', 'ptratio', 'b', 'lstat']]\r\n","dep = boston[['medv']]\r\n","\r\n","print(indep.shape)\r\n","print(dep.shape)"],"execution_count":5,"outputs":[{"output_type":"stream","text":["(506, 13)\n","(506, 1)\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"F2wUT_3p_ZcS","executionInfo":{"status":"ok","timestamp":1611991229382,"user_tz":-540,"elapsed":867,"user":{"displayName":"KS Eom","photoUrl":"","userId":"06161176909716943321"}},"outputId":"717db087-f917-4d3f-9edd-cbab746a99f9"},"source":["X = tf.keras.layers.Input(shape=13)\r\n","\r\n","#히든레이어(10개의 노드)\r\n","H = tf.keras.layers.Dense(10, activation='swish')(X)\r\n","\r\n","H = tf.keras.layers.Dense(10, activation='swish')(H)\r\n","H = tf.keras.layers.Dense(10, activation='swish')(H)\r\n","H = tf.keras.layers.Dense(10, activation='swish')(H)\r\n","H = tf.keras.layers.Dense(10, activation='swish')(H)\r\n","H = tf.keras.layers.Dense(10, activation='swish')(H)\r\n","H = tf.keras.layers.Dense(10, activation='swish')(H)\r\n","H = tf.keras.layers.Dense(10, activation='swish')(H)\r\n","H = tf.keras.layers.Dense(10, activation='swish')(H)\r\n","H = tf.keras.layers.Dense(10, activation='swish')(H)\r\n","H = tf.keras.layers.Dense(10, activation='swish')(H)\r\n","H = tf.keras.layers.Dense(10, activation='swish')(H)\r\n","H = tf.keras.layers.Dense(10, activation='swish')(H)\r\n","\r\n","Y = tf.keras.layers.Dense(1)(H)\r\n","\r\n","model = tf.keras.models.Model(X,Y)\r\n","model.compile(loss='mse')\r\n","\r\n","#모델확인\r\n","model.summary()"],"execution_count":40,"outputs":[{"output_type":"stream","text":["Model: \"model_8\"\n","_________________________________________________________________\n","Layer (type)                 Output Shape              Param #   \n","=================================================================\n","input_11 (InputLayer)        [(None, 13)]              0         \n","_________________________________________________________________\n","dense_23 (Dense)             (None, 10)                140       \n","_________________________________________________________________\n","dense_24 (Dense)             (None, 10)                110       \n","_________________________________________________________________\n","dense_25 (Dense)             (None, 10)                110       \n","_________________________________________________________________\n","dense_26 (Dense)             (None, 10)                110       \n","_________________________________________________________________\n","dense_27 (Dense)             (None, 10)                110       \n","_________________________________________________________________\n","dense_28 (Dense)             (None, 10)                110       \n","_________________________________________________________________\n","dense_29 (Dense)             (None, 10)                110       \n","_________________________________________________________________\n","dense_30 (Dense)             (None, 10)                110       \n","_________________________________________________________________\n","dense_31 (Dense)             (None, 10)                110       \n","_________________________________________________________________\n","dense_32 (Dense)             (None, 10)                110       \n","_________________________________________________________________\n","dense_33 (Dense)             (None, 10)                110       \n","_________________________________________________________________\n","dense_34 (Dense)             (None, 10)                110       \n","_________________________________________________________________\n","dense_35 (Dense)             (None, 10)                110       \n","_________________________________________________________________\n","dense_36 (Dense)             (None, 1)                 11        \n","=================================================================\n","Total params: 1,471\n","Trainable params: 1,471\n","Non-trainable params: 0\n","_________________________________________________________________\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"mnYZmRHyGxog","executionInfo":{"status":"ok","timestamp":1611991337027,"user_tz":-540,"elapsed":26130,"user":{"displayName":"KS Eom","photoUrl":"","userId":"06161176909716943321"}},"outputId":"494232c2-84de-4195-8681-be759530f3a7"},"source":["model.fit(indep, dep, epochs=1000, verbose=0)\r\n","model.fit(indep, dep, epochs=10)"],"execution_count":44,"outputs":[{"output_type":"stream","text":["Epoch 1/10\n","16/16 [==============================] - 0s 2ms/step - loss: 6.8374\n","Epoch 2/10\n","16/16 [==============================] - 0s 2ms/step - loss: 5.1777\n","Epoch 3/10\n","16/16 [==============================] - 0s 2ms/step - loss: 6.0622\n","Epoch 4/10\n","16/16 [==============================] - 0s 2ms/step - loss: 6.8908\n","Epoch 5/10\n","16/16 [==============================] - 0s 2ms/step - loss: 5.6056\n","Epoch 6/10\n","16/16 [==============================] - 0s 2ms/step - loss: 5.4851\n","Epoch 7/10\n","16/16 [==============================] - 0s 2ms/step - loss: 6.3133\n","Epoch 8/10\n","16/16 [==============================] - 0s 2ms/step - loss: 5.7701\n","Epoch 9/10\n","16/16 [==============================] - 0s 2ms/step - loss: 5.3875\n","Epoch 10/10\n","16/16 [==============================] - 0s 2ms/step - loss: 6.1774\n"],"name":"stdout"},{"output_type":"execute_result","data":{"text/plain":["<tensorflow.python.keras.callbacks.History at 0x7fa970b65550>"]},"metadata":{"tags":[]},"execution_count":44}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"rQPbJyqWHHkV","executionInfo":{"status":"ok","timestamp":1611991343149,"user_tz":-540,"elapsed":777,"user":{"displayName":"KS Eom","photoUrl":"","userId":"06161176909716943321"}},"outputId":"8547c8fc-b5de-4fa9-d76d-d9d826a161cd"},"source":["print(model.predict(indep[:5]))\r\n","print(dep[:5])"],"execution_count":45,"outputs":[{"output_type":"stream","text":["[[30.676386]\n"," [21.359938]\n"," [31.18002 ]\n"," [36.95906 ]\n"," [35.519474]]\n","   medv\n","0  24.0\n","1  21.6\n","2  34.7\n","3  33.4\n","4  36.2\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"wEe9voKFHOQc"},"source":[""],"execution_count":null,"outputs":[]}]}