a -> 1
1 -> a
a = 1
a = 3
install.packages("ggplot2")
library(ggplot2)
setwd("C:/Users/Gargantua/Desktop/data_analysis/Project4. R고 보면 쉬운 빅데이터 분석 실무/working")
setwd("C:/Users/Gargantua/Desktop/뉴민")
setwd("C:/Users/Gargantua/Desktop/data_analysis/Project4_R_KoreaBankingInstitute/working")
iris <- read.csv("C:/Users/Gargantua/Desktop/data_analysis/Project4_R_KoreaBankingInstitute/working/lesson_3/iris.txt", sep="")
View(iris)
iris$Sepal.Length
y <- ifelse(iris$Sepal.Length>5, "more than 5", "less than 5")
y
iris$Sepal.Length_level <- y
View(iris)
View(iris)
head(iris)
iris <- read.csv("C:/Users/Gargantua/Desktop/data_analysis/Project4_R_KoreaBankingInstitute/working/lesson_3/iris.txt", sep="")
View(iris)
aggregate(Sepal.Length ~ Species, data = iris, mean)
aggregate(Sepal.Length ~ Species, data = iris, sum)
aggregate(. ~ Species, data = iris, mean)
customer_rfm <- read.csv("C:/Users/Gargantua/Desktop/data_analysis/Project4_R_KoreaBankingInstitute/working/lesson_3/customer_rfm.txt", sep="")
View(customer_rfm)
str(customer_rfm)
head(customer_rfm)
aggregate(monetary ~ monetary_level, data = customer_rfm, mean)
aggregate(recency ~ recency_level, data = customer_rfm, mean)
aggregate(frequency ~ frequency_level, data = customer_rfm, mean)
#프로파일링 데이터 제작
rfm_level <- aggregate(. ~ monetary_level + frequency_level + recency_level, data = customer_rfm, mean)
rfm_level
View(rfm_level)
#고객세분화 데이터 시각화해보기
library(rgl)
install.packages("rgl")
#고객세분화 데이터 시각화해보기
#rgl라ㅇ브러리 불러오기
library(rgl)
#3d plot을 이용한 RFM 지수 시각화
plot3d(customer_rfm$monetary, customer_rfm$frequency, customer_rfm$recency,
xlab = 'Monetarym', ylab = 'Frequency', zlab = 'Recency', col = "blue", size = 6)
q()
travel <- read.csv("C:/Users/Gargantua/Desktop/data_analysis/Project4_R_KoreaBankingInstitute/working/lesson_4/travel.csv")
View(travel)
#데이터 살피기
str(travel)
head(travel)
#데이터 슬라이싱
travel
travel[1:20,]
#통합 구문을 통한 집계
aggregate(. ~ destination, data=travel, sum)
#데이터 추리기
travel1<-travel[,c("cust_id", "destination")]
travel1
#데이터를 트랜잭션으로 변환
travel2 <- split(travel$destination, travel$cust_id)
travel2
install.packages("arules")
#트랜잭션 전환
travel3 <- as(travel2, "transactions")
#트랜잭션 전환
library(arules)
travel3 <- as(travel2, "transactions")
travel3
summary(travel3)
#트랜잭션을 역으로 DF로 전환
as(travel3, "data.frame")
#트랜잭션 구조 살피기 : tabel 이용
table(travel3)
#트랜잭션 구조 살피기 : tabel 이용
table(travel1)
#연관성 분석
rules <- apriori(travel3, parameter = list(supp=0.15, conf=0.8))
summary(rules)
inspect(rules)
install.packages("arulesViz")
# 0) 관련패키지다운로드
library(arules)
library(datasets)
# 1) 데이터불러오기
data(Groceries)
summary(Groceries)
# 2) 가장많이구매한 상위 20개 상품 시각화
itemFrequencyPlot(Groceries,topN=20,type="absolute")
# 3) 연관성분석 수행 후 확인
rules <- apriori(Groceries, parameter = list(supp=0.001, conf = 0.8))
summary(rules)
inspect(rules)
rules2<-sort(apriori(Groceries, parameter=list(supp=0.001,conf = 0.08,minlen=2),
appearance = list(default="rhs",lhs="whole milk"),
control = list(verbose=F)),decreasing=TRUE,by="confidence")
inspect(rules2)
inspect(rules2[1:5,])
# 5) 연관성규칙 시각화
library(arulesViz)
plot(rules2,method="graph",interactive=TRUE,shading=NA)
plot(rules2,method="graph",interactive=TRUE,shading=NA)
plot(rules2,method="graph",engine = 'interactive',shading=NA)
plot(rules2,method="graph",engine='interactive',shading=NA)
plot(rules2,method="graph",interactive = TRUE, shading=NA)
