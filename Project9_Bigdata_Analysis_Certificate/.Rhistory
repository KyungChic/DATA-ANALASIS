help("mode")
mode(5_)
mode(5)
mode('a')
mode('abc')
mode(TRUE)
x = c(1,2,3,4)
x
y = c("1",2,"3")
y
z = 5:10
z
x = rep(c(1,2,3),3)
x
seq(1,10,3)
seq(1,10,4)
x = c(3:8)
x
x[4]
x[-4]
x[x>5]
x[5:8]
x=c(1:3)
x*3
y=c(3:5)
x+y
x*y
list(name="soo", height=90)
$name
$height
a = list(name="soo", height = 90)
$name
a$name
$a$name
list(name="soo", height=90)
$name
list(x=list(a=c(1,2,3)),
y=list(b=c(1,2,3,4)))
matrix(c(1:12), nrow=4)
matrix(c(1:12), ncol=4)
matrix(c(1:12), nrow=3, byrow=True)
matrix(c(1:12), nrow=3, byrow=TRUE)
matrix(c(1:9), nrow=3, dimnames=list(c("t1","t2","t3"),))
matrix(c(1:9), nrow=3, dimnames=list(c("t1","t2","t3"),
c("c1","c2","c3")))
a = matrix(c(1:4), nrow=2)
a
b = matrix(c(1:4), nrow=2)
b
d = data.frame(a=c(1,2,3,4),)
d = data.frame(a=c(1,2,3,4),
b=c(2,3,4,5),
c=c("M","F","M","F"))
d
str(d)
array(c(1:8),
dim=c(2,2,2),
dimnames=list(rb,cn,mn))
rn=c("1행","2행")
cn=c("1열","2열")
mn=c("1차원","2차원")
array(c(1:8),
dim=c(2,2,2),
dimnames=list(rb,cn,mn))
array(c(1:8),
dim=c(2,2,2),
dimnames=list(rn,cn,mn))
x=data.frame(a=c("s1","s2","s3"),
b=c("A",'B','C'))
x
y=data.frame(a=c('s5','s6','s7'),
b=c('E','F','G'))
u
y
rbind(x,y)
x=data.frame(name=c('a','b','c'),
math=c(1,2,3))
x
y=data.frame(name=c('c','b','d'),
english=c(4,5,6))
y
merge(x,y)
merge(x,y,all.x=TURE)
merge(x,y,all.x=TRUE)
merge(x,y,all.y=TRUE)
merge(x,y,all=TRUE)
score=95
if(score>=90){
print("수")
}
score = 60
if(score>=90)
print("우")
if(score>=90){}
if(score>=90){
print("수")}
else if(score>=80){
print("우")
}else{
print("가")
}
if(score>=90){
print("수")}
else if(score>=80){
print("우")}
else{
print("가")
}
if(score>=90){
print("수")}
else if(score>=80){
print("우")}
else{
print("가")}
if(score>=90){
print("수")}
else if(score>=80){
print("우")}
else{print("가")}
if(score>=90){
print("수")}
else if(score>=80){
print("우")}
else{print("가")}
if(score>=90){print("수")}
else if(score>=80){print("우")}
else{print("가")}
if(score>=90){
print("수")
} else if(score>=80){
print("우")
} else{
print("가")
}
score=95
ifelse( score>=60, "Pass", "FAil")
score=60
ifelse( score>=60, "Pass", "FAil")
course = "C"
switch(course,
"A" = "brunce",
"B" = "lunch",
"dinner")
for(i in 1:2){
print(i)
}
i=1
while(i<=2){
print(i)
i=i+1
}
i=1
repeat{
print(i)
if(i>=2){
break
}
i=i+1
}
func_abs=function(x){
if(x<0){
return(-x)
}else{
return(x)
}
}
func_abs(-10.9)
func_abs(10)
func_diff = function(x,y){
print(x)
print(y)
print(x-y)
}
val = func_diff(9,1)
val = func_diff(9,1)
val
a = c(3,5,4)
plot(a)
length = iris$Petal.Length
width = iris$Petal.Width
plot(length,
width,
xlab = "꽃잎 길이",
ylab = '꽃잎 너비',
main = "꽃잎과 길이")
hist(length,
xlab = "꽃받침의길이",
ylab = "수량",
main = "꽃받침길이분포")
length = iris$Sepal.Length
hist(length,
xlab = "꽃받침의길이",
ylab = "수량",
main = "꽃받침길이분포")
h = c(15,23,5,20)
name = c("1분기","2분기","3분기","4분기")
barplot(h,names.arg=name)
h = table(iris$Species)
barplot(h,
ylab="수량",
xlab="종별 수량")
p = c(15,23,5,20)
pie(x = p,
labels = name,
density=50,
angle=30*1:4)
boxplot(iris$Sepal.Length ~ iris$Species,
notch = TRUE,
xlab="종별",
ylab="꽃받침 길이",
main = "종별 꽃받침 길이 분포")
scan("")
scan("")
scan("")
get.wd()
getwd()
setwd("C:\Users\Gargantua\Desktop\data_analysis\Project9_Bigdata_Analysis_Certificate")
setwd("C:\\Users\\Gargantua\\Desktop\\data_analysis\\Project9_Bigdata_Analysis_Certificate")
str(iris)
write.table(iris, file = "write.txt")
read.table("write.txt")
adply(iris, 1, function(row){row$Sepal.Length>=5.0 &
row$Species == "setosa"})
library(plyr)
adply(iris, 1, function(row){row$Sepal.Length>=5.0 &
row$Species == "setosa"})
adply(iris, 2, function(row){row$Sepal.Length>=5.0 &
row$Species == "setosa"})
adply(iris, 2, function(row){row$Sepal.Length>=5.0 &
row$Species == "setosa"})
type(iris)
iris.type()
summary(iris)
